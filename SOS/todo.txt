#########################
##### NEW FUNCTIONS #####
#########################

Implement the following methods

1) checkSolver, run all tests using a given solver and print results
2) realZeros, find the real zeros of an ideal

Extend the following methods to quotient rings:

3) createSOSModel
4) solveSOS
5) lasserreHierarchy
6) sosInIdeal

Improve the following methods

7) net(SOSPoly)
8) solveSDP should accept many PSD blocks
9) lasserreHierarchy, allow inequalities

#########################
######## TESTING ########
#########################

Implement tests for the following methods

--1) cleanSOS--
--2) sub(SOSPoly,Ring)--
--3) sosdec (has many tests already)--
--4) toRing--
--5) roundPSDmatrix--
--6) blkDiag--
7*) LDLdecomposition
--8) genericCombination--
9*) choosemonp
10) createSOSModel

The following methods need a test that accepts the Solver as an input

14*) solveSDP
15*) solveSOS
16) sosdecTernary
17) sosInIdeal
18) lowerBound
19) lasserreHierarchy

The methods marked with (*) already have some tests, but need more.

NOTE: All methods must be tested with inputs over QQ and over RR.

#########################
####### DEBUGGING #######
#########################

Known bugs:

1) This input fails:
R = QQ[x,y,z]
f = z 
h1 = x^2 + y^2 + z^2 - 1
(m,s)= lasserreHierarchy (f, {h1}, 6, Solver=>"CSDP")

2) sosInIdeal({x+1},2) fails over QQ[x], but works over QQ[x,y]

2') sosInIdeal({(x+1)^2},2) also fails

3) Code in bugs/lowerBoundTwoVariate.m2 cannot handle that "SDP
failed".  Also: Why does the SDP fail?

4) Numerators in bugs/sosdecTernaryHarris.m2 lie in different rings

#########################
##### DOCUMENTATION #####
#########################

Methods without documentation

--1) sosPoly--
--2) cleanSOS--
--3) toRing--
--4) sub(SOSPoly,Ring)--
--5) SOSPoly * SOSPoly--
--6) genericCombination--

Methods whose documentation needs improvement

7) sumSOS
8) roundPSDmatrix
9) choosemonp
10) lowerBound
11) lasserreHierarchy

########################################
######### Comments and discussion ######
########################################

1) The randomness of the SDP solvers is a severe problem, for example
for the tests.  If a routine fails 1 out of 10 times, how should it be
tested?

2) The function sosInIdeal is worthless if it can't even solve
    R = QQ[x,y,z];
    h = {x-y, x+z};
    (s,mult) = sosInIdeal (h,10, Solver=>"CSDP");

3) Maybe we should implement that each RingMap can be applied to an
   SOSpoly?

4) Should toRing really be in the interface of the package?  Maybe it
   would be better to have functions "makeCoefficientsRational" and
   "makeCoefficientsReal"?  The functions also have the problem that
   they assume that the user wants to change the coefficient field and
   the code is not taking care of the case that both coefficient
   fields are real or both rational.  If we include the function we
   should define its interface first.


#########################
######### PAPER #########
#########################

Sketch of the paper (might change)

1) brief introduction to SOS, nonnegativity, polynomial optimization
2) computing SOS decompositions (Motzkin, Robinson, Lax-Lax)
2) computing SOS decompositions of ternary forms (Harris)
3) parametrized SOS problems
4) SOS optimization (lowerBound, lasserreHierarchy)

